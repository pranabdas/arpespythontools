"use strict";(self.webpackChunkarpespythontools=self.webpackChunkarpespythontools||[]).push([[939],{6316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"plane-slice","title":"Slicing volume data","description":"We can slice our 3D Fermi map data in order to get a particular plane using the","source":"@site/docs/plane-slice.md","sourceDirName":".","slug":"/plane-slice","permalink":"/arpespythontools/docs/plane-slice","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/arpespythontools/blob/main/docs/plane-slice.md","tags":[],"version":"current","frontMatter":{"title":"Slicing volume data"},"sidebar":"docs","previous":{"title":"Line profile","permalink":"/arpespythontools/docs/line-profile"},"next":{"title":"Rotate Fermi map","permalink":"/arpespythontools/docs/rotate"}}');var i=n(4848),s=n(8453);const a={title:"Slicing volume data"},o=void 0,l={},p=[];function c(e){const t={code:"code",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["We can slice our 3D Fermi map data in order to get a particular plane using the\r\n",(0,i.jsx)(t.code,{children:"plane_slice"})," function. Say, we need a constant energy cut."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:"showLineNumbers",children:"import arpespythontools as arp\r\ndata, energy, theta, phi = arp.load_ses_map('sample_map_data.zip')\r\n# We want iso-energy surface integrated between energy values 15.6 and 15.8 eV\r\niso_energy_surf = arp.plane_slice(data, energy, 15.6, 15.8)\r\n\r\n# Plot image\r\nimport matplotlib.pyplot as plt\r\n%matplotlib inline\r\n# Above line is specific to Jupyter Notebook\r\nplt.figure(figsize = (8, 6))\r\nplt.imshow(iso_energy_surf, origin = 'lower', aspect = 'auto', \\\r\n            extent = (theta[0], theta[-1], phi[0], phi[-1]))\r\nplt.xlabel(\"$\\\\phi$ (deg)\")\r\nplt.ylabel(\"$\\\\theta$ (deg)\")\r\nplt.show()\n"})}),"\n",(0,i.jsx)(t.p,{children:"This should give you an iso-energy surface like this:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"iso-energy-surface",src:n(2386).A+"",width:"712",height:"549"})}),"\n",(0,i.jsx)(t.p,{children:"How about if we want the slice along another axis? All we need is transpose the\r\ndata, and provide the correct axis order."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:"showLineNumbers",children:"# integrating phi values between (-0.5, 0.5) degrees\r\nphi_slice = arp.plane_slice(data.transpose([2, 0, 1]), phi, -0.5, 0.5)\r\n\r\n# Plot image\r\nimport matplotlib.pyplot as plt\r\n%matplotlib inline\r\n# Above line is specific to Jupyter Notebook\r\nplt.figure(figsize = (8, 6))\r\nplt.imshow(phi_slice, origin = 'lower', aspect = 'auto', \\\r\n            extent = (phi[0], phi[-1], energy[0], energy[-1]))\r\nplt.xlabel(\"$\\\\theta$ (deg)\")\r\nplt.ylabel(\"$E_{kin}$ (eV)\")\r\nplt.show()\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"phi-slice",src:n(8072).A+"",width:"728",height:"549"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},2386:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/iso-energy-surface-12b9136739c1253a3d5bfff95869a7a4.webp"},8072:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/phi-slice-4aeca814ede76933025f2c01725435d6.webp"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(6540);const i={},s=r.createContext(i);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);