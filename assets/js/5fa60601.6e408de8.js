"use strict";(self.webpackChunkarpespythontools=self.webpackChunkarpespythontools||[]).push([["669"],{5101:function(e,t,o){o.r(t),o.d(t,{metadata:()=>n,contentTitle:()=>s,default:()=>c,assets:()=>l,toc:()=>d,frontMatter:()=>i});var n=JSON.parse('{"id":"igor","title":"Import / export Igor text","description":"If you need to work with the Igor Program, arpespythontools provides a way to","source":"@site/docs/igor.md","sourceDirName":".","slug":"/igor","permalink":"/arpespythontools/docs/igor","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/arpespythontools/blob/main/docs/igor.md","tags":[],"version":"current","frontMatter":{"title":"Import / export Igor text","sidebar_label":"Igor text"},"sidebar":"docs","previous":{"title":"XPS data","permalink":"/arpespythontools/docs/xps"},"next":{"title":"Glossary","permalink":"/arpespythontools/docs/glossary"}}'),r=o("5893"),a=o("65");let i={title:"Import / export Igor text",sidebar_label:"Igor text"},s=void 0,l={},d=[];function p(e){let t={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["If you need to work with the Igor Program, ",(0,r.jsx)(t.code,{children:"arpespythontools"})," provides a way to\nimport and export data in Igor text (",(0,r.jsx)(t.code,{children:".itx"}),") format. ",(0,r.jsx)(t.code,{children:"import_itx"})," and\n",(0,r.jsx)(t.code,{children:"export_itx"})," functions can import and export 1-dimensionl, 2-dimensionl, and\n3-dimensionl data/wave, respectively."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",metastring:"showLineNumbers",children:"import arpespythontools as arp\n\n# import itx file\ndata, x = arp.import_itx('path/data.itx')  # 1D wave\ndata, x, y = arp.import_itx('path/data.itx')  # 2D wave\ndata, x, y, z = arp.import_itx('path/data.itx')  # 3D wave\n\n# export itx file\narp.export_itx(\"path/data.itx\", data, x=[], y=[], z =[], wave_name='wave',\\\n    x_label='x-label', y_label='y-label', z_label='z-label')\n"})}),"\n",(0,r.jsxs)(t.p,{children:["While importing, ",(0,r.jsx)(t.code,{children:"data"})," contains the 1D, 2D or 3D data. ",(0,r.jsx)(t.code,{children:"x"}),", ",(0,r.jsx)(t.code,{children:"y"}),", ",(0,r.jsx)(t.code,{children:"z"})," are the\ncorresponding axis scaling. While exporting, axis scaling is optional. In case\n",(0,r.jsx)(t.code,{children:"x"}),", ",(0,r.jsx)(t.code,{children:"y"}),", ",(0,r.jsx)(t.code,{children:"z"})," is not provided the default scaling (",(0,r.jsx)(t.code,{children:"DimOffset=0"}),", and\n",(0,r.jsx)(t.code,{children:"DimDelta=1"}),") would be applied. Similarly, you can provide wave name, and axis\nlabels (optional) as well."]}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["If you need to read Igor Binary Waves (",(0,r.jsx)(t.code,{children:".ibw"})," format), you can check out this\nPython implementation: ",(0,r.jsx)(t.a,{href:"https://github.com/wking/igor",children:"https://github.com/wking/igor"}),"."]})})]})}function c(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},65:function(e,t,o){o.d(t,{Z:function(){return s},a:function(){return i}});var n=o(7294);let r={},a=n.createContext(r);function i(e){let t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);