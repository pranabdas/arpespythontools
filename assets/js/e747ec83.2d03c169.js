"use strict";(self.webpackChunkarpespythontools=self.webpackChunkarpespythontools||[]).push([["872"],{2061:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>l,default:()=>h,toc:()=>t,metadata:()=>i,assets:()=>c,contentTitle:()=>d});var i=JSON.parse('{"id":"glossary","title":"Glossary","description":"Full list of arpespythontools modules/ routines in alphabetical order:","source":"@site/docs/glossary.md","sourceDirName":".","slug":"/glossary","permalink":"/arpespythontools/docs/glossary","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/arpespythontools/blob/main/docs/glossary.md","tags":[],"version":"current","frontMatter":{"title":"Glossary"},"sidebar":"docs","previous":{"title":"Igor text","permalink":"/arpespythontools/docs/igor"},"next":{"title":"License","permalink":"/arpespythontools/docs/license"}}'),r=s(5893),a=s(65);let l={title:"Glossary"},d=void 0,c={},t=[{value:"crop_2d",id:"crop_2d",level:2},{value:"cv2d",id:"cv2d",level:2},{value:"export_itx",id:"export_itx",level:2},{value:"import_itx",id:"import_itx",level:2},{value:"k_conv",id:"k_conv",level:2},{value:"k_conv3d",id:"k_conv3d",level:2},{value:"k_conv3d_mp",id:"k_conv3d_mp",level:2},{value:"laplacian",id:"laplacian",level:2},{value:"line_profile",id:"line_profile",level:2},{value:"load_ses_map",id:"load_ses_map",level:2},{value:"load_ses_spectra",id:"load_ses_spectra",level:2},{value:"plane_slice",id:"plane_slice",level:2},{value:"rotate_2d",id:"rotate_2d",level:2},{value:"rotate_3d",id:"rotate_3d",level:2},{value:"save_xps",id:"save_xps",level:2}];function o(e){let n={a:"a",annotation:"annotation",code:"code",em:"em",h2:"h2",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mover:"mover",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Full list of ",(0,r.jsx)(n.strong,{children:"arpespythontools"})," modules/ routines in alphabetical order:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import arpespythontools as arp\n"})}),"\n",(0,r.jsx)(n.h2,{id:"crop_2d",children:"crop_2d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data_crop, x_crop, y_crop = arp.crop_2d(data, x, y, x_min, x_max, y_min, y_max)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Returns cropped 2D array and corresponding axes scaling vectors defined by\n[",(0,r.jsx)(n.code,{children:"x_min"}),", ",(0,r.jsx)(n.code,{children:"x_max"}),"] and [",(0,r.jsx)(n.code,{children:"y_min"}),", ",(0,r.jsx)(n.code,{children:"y_max"}),"]."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 2D array (intensity matrix)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"})," : 1D vector (e.g., angle)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y"})," : 1D vector (e.g., energy)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x_min"})," and ",(0,r.jsx)(n.code,{children:"x_max"})," : lower and upper bound of ",(0,r.jsx)(n.code,{children:"x"})," to crop."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y_min"})," and ",(0,r.jsx)(n.code,{children:"y_max"})," : lower and upper bound of ",(0,r.jsx)(n.code,{children:"y"})," to crop."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data_crop"})," : cropped 2D array."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x_crop"})," : corresponding x-scaling vector."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y_crop"})," : corresponding y-scaling vector."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cv2d",children:"cv2d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"cv2d = arp.cv2d(data, x, y, bw=5, c1=0.001, c2=0.001, w=1)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Calculates two-dimensional curvature. The details about the curvature method can\nbe found here: P. Zhang et. al., ",(0,r.jsx)(n.em,{children:"A precise method for visualizing dispersive\nfeatures in image plots"}),", ",(0,r.jsxs)(n.a,{href:"https://doi.org/10.1063/1.3585113",children:["Review of Scientific Instruments ",(0,r.jsx)(n.strong,{children:"82"}),", 043712\n(2011)"]}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 2D spectra."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"})," : 1D array of energy."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y"})," : 1D array of theta values."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bw"})," : width for box-car smoothing, integer number of points (default value =\n5)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"c1"}),", ",(0,r.jsx)(n.code,{children:"c2"})," : free parameters as described in the above reference (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"w"})," : scaling weight (optional). Default weight is 1."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cv2d"})," : 2D array of curvature. Output array has the same shape as the input\narray."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"export_itx",children:"export_itx"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"arp.export_itx(path, data, x=[], y=[], z =[], wave_name='wave', \\\n    x_label='x-label', y_label='y-label', z_label='z-label')\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Exports 1D, 2D, or 3D array to Igor text (",(0,r.jsx)(n.code,{children:".itx"}),") file."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"path"})," : Output filename or path of the ",(0,r.jsx)(n.code,{children:".itx"})," file."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : Input data array to save. Could be 1D, 2D, or 3D array."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"}),", ",(0,r.jsx)(n.code,{children:"y"}),", ",(0,r.jsx)(n.code,{children:"z"})," (optional) : axes scaling for the corresponding input data array.\nIf a value is not provided, default ",(0,r.jsx)(n.code,{children:"DimOffset=0"})," and ",(0,r.jsx)(n.code,{children:"DimDelta=1"})," would be\napplied."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wave_name"})," (optional) : Igor wave name."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x-"}),", ",(0,r.jsx)(n.code,{children:"y-"}),", ",(0,r.jsx)(n.code,{children:"z-label"})," (optional) : labels for ",(0,r.jsx)(n.code,{children:"x"}),", ",(0,r.jsx)(n.code,{children:"y"})," and ",(0,r.jsx)(n.code,{children:"z"}),", respectively."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"import_itx",children:"import_itx"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data, x, y, z = arp.import_itx(name)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Loads data and its axes scaling from Igor text (",(0,r.jsx)(n.code,{children:".itx"}),") format."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string) : Input Igor text filename."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 1D, 2D, or 3D array."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"}),", ",(0,r.jsx)(n.code,{children:"y"}),", ",(0,r.jsx)(n.code,{children:"z"})," : axes scales. Number of output returned depends on the input\nwave dimension."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"k_conv",children:"k_conv"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data_k, e_bin, k = arp.k_conv(data, energy, angle, fermi_energy)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Transforms the intensity fromm real space to k-space."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 2D array of intensity values in real space. Dimension 1 is along\nenergy and Dimension 2 is along angle."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"energy"})," : 1D array of kinetic energy values in eV."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"angle"})," : 1D array of theta values in degree."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fermi_energy"})," (number) : Fermi energy value in eV in terms of kinetic energy."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data_k"})," : 2D array of intensity values in k-space. Intensity values outside\nthe interpolation range is set to ",(0,r.jsx)(n.code,{children:"NaN"})," (not a number)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"e_bin"})," : 1D array of Binding energy values in eV. Binding energy below Fermi\nenergy is positive convention is used."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"k"})," : 1D array of momentum (k) values in ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsx)(n.mrow,{children:(0,r.jsxs)(n.msup,{children:[(0,r.jsxs)(n.mover,{accent:"true",children:[(0,r.jsx)(n.mi,{children:"A"}),(0,r.jsx)(n.mo,{children:"\u02DA"})]}),(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mo,{children:"\u2212"}),(0,r.jsx)(n.mn,{children:"1"})]})]})}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"\\mathring{A}^{-1}"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"0.9468em"}}),(0,r.jsxs)(n.span,{className:"mord",children:[(0,r.jsx)(n.span,{className:"mord accent",children:(0,r.jsx)(n.span,{className:"vlist-t",children:(0,r.jsx)(n.span,{className:"vlist-r",children:(0,r.jsxs)(n.span,{className:"vlist",style:{height:"0.9468em"},children:[(0,r.jsxs)(n.span,{style:{top:"-3em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",children:"A"})]}),(0,r.jsxs)(n.span,{style:{top:"-3.2523em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(n.span,{className:"accent-body",style:{left:"-0.2361em"},children:(0,r.jsx)(n.span,{className:"mord",children:"\u02DA"})})]})]})})})}),(0,r.jsx)(n.span,{className:"msupsub",children:(0,r.jsx)(n.span,{className:"vlist-t",children:(0,r.jsx)(n.span,{className:"vlist-r",children:(0,r.jsx)(n.span,{className:"vlist",style:{height:"0.8141em"},children:(0,r.jsxs)(n.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsxs)(n.span,{className:"mord mtight",children:[(0,r.jsx)(n.span,{className:"mord mtight",children:"\u2212"}),(0,r.jsx)(n.span,{className:"mord mtight",children:"1"})]})})]})})})})})]})]})})]}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"k_conv3d",children:"k_conv3d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data_k, e_bin, kx, ky = arp.k_conv3d(data, energy, theta, phi, fermi_energy)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Transforms the Fermi map data from real space to k-space."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 3D matrix of intensity values in real space. Dimension 1 is along\nkinetic energy, Dimension 2 is along theta, and Dimension 3 along phi."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"energy"})," : 1D array of kinetic energy values in eV."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"theta"})," : 1D array of theta values in degree. This is the direction along the\nslit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"phi"})," : 1D array of phi values in degree. This is the direction perpendicular\nto the slit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fermi_energy"})," (number) : Fermi energy value in eV in terms of kinetic energy."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data_k"})," : 3D matrix of intensity values in k-space. Intensity values outside\nthe interpolation range is set to ",(0,r.jsx)(n.code,{children:"NaN"})," (not a number)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"e_bin"})," : 1D array of Binding energy values in eV. Binding energy below Fermi\nenergy is positive convention is used."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kx"}),", ",(0,r.jsx)(n.code,{children:"ky"})," : 1D array of momentum (k) values in ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsx)(n.mrow,{children:(0,r.jsxs)(n.msup,{children:[(0,r.jsxs)(n.mover,{accent:"true",children:[(0,r.jsx)(n.mi,{children:"A"}),(0,r.jsx)(n.mo,{children:"\u02DA"})]}),(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mo,{children:"\u2212"}),(0,r.jsx)(n.mn,{children:"1"})]})]})}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"\\mathring{A}^{-1}"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"0.9468em"}}),(0,r.jsxs)(n.span,{className:"mord",children:[(0,r.jsx)(n.span,{className:"mord accent",children:(0,r.jsx)(n.span,{className:"vlist-t",children:(0,r.jsx)(n.span,{className:"vlist-r",children:(0,r.jsxs)(n.span,{className:"vlist",style:{height:"0.9468em"},children:[(0,r.jsxs)(n.span,{style:{top:"-3em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",children:"A"})]}),(0,r.jsxs)(n.span,{style:{top:"-3.2523em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(n.span,{className:"accent-body",style:{left:"-0.2361em"},children:(0,r.jsx)(n.span,{className:"mord",children:"\u02DA"})})]})]})})})}),(0,r.jsx)(n.span,{className:"msupsub",children:(0,r.jsx)(n.span,{className:"vlist-t",children:(0,r.jsx)(n.span,{className:"vlist-r",children:(0,r.jsx)(n.span,{className:"vlist",style:{height:"0.8141em"},children:(0,r.jsxs)(n.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsxs)(n.span,{className:"mord mtight",children:[(0,r.jsx)(n.span,{className:"mord mtight",children:"\u2212"}),(0,r.jsx)(n.span,{className:"mord mtight",children:"1"})]})})]})})})})})]})]})})]})," along\nthe slit, and perpendicular to the slit directions, respectively."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"k_conv3d_mp",children:"k_conv3d_mp"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data_k, e_bin, kx, ky = arp.k_conv3d_mp(data, energy, theta, phi, fermi_energy)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Multiprocessing implementation of ",(0,r.jsx)(n.code,{children:"k_conv3d"}),". Should be up to as many times\nfaster as many processor cores are available. Transforms the Fermi map data from\nreal space to k-space."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 3D matrix of intensity values in real space. Dimension 1 is along\nkinetic energy, Dimension 2 is along theta, and Dimension 3 along phi."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"energy"})," : 1D array of kinetic energy values in eV."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"theta"})," : 1D array of theta values in degree. This is the direction along the\nslit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"phi"})," : 1D array of phi values in degree. This is the direction perpendicular\nto the slit."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fermi_energy"})," (number) : Fermi energy value in eV in terms of kinetic energy."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data_k"})," : 3D matrix of intensity values in k-space. Intensity values outside\nthe interpolation range is set to ",(0,r.jsx)(n.code,{children:"NaN"})," (not a number)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"e_bin"})," : 1D array of Binding energy values in eV. Binding energy below Fermi\nenergy is positive convention is used."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kx"}),", ",(0,r.jsx)(n.code,{children:"ky"})," : 1D array of momentum (k) values in ",(0,r.jsxs)(n.span,{className:"katex",children:[(0,r.jsx)(n.span,{className:"katex-mathml",children:(0,r.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,r.jsxs)(n.semantics,{children:[(0,r.jsx)(n.mrow,{children:(0,r.jsxs)(n.msup,{children:[(0,r.jsxs)(n.mover,{accent:"true",children:[(0,r.jsx)(n.mi,{children:"A"}),(0,r.jsx)(n.mo,{children:"\u02DA"})]}),(0,r.jsxs)(n.mrow,{children:[(0,r.jsx)(n.mo,{children:"\u2212"}),(0,r.jsx)(n.mn,{children:"1"})]})]})}),(0,r.jsx)(n.annotation,{encoding:"application/x-tex",children:"\\mathring{A}^{-1}"})]})})}),(0,r.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,r.jsxs)(n.span,{className:"base",children:[(0,r.jsx)(n.span,{className:"strut",style:{height:"0.9468em"}}),(0,r.jsxs)(n.span,{className:"mord",children:[(0,r.jsx)(n.span,{className:"mord accent",children:(0,r.jsx)(n.span,{className:"vlist-t",children:(0,r.jsx)(n.span,{className:"vlist-r",children:(0,r.jsxs)(n.span,{className:"vlist",style:{height:"0.9468em"},children:[(0,r.jsxs)(n.span,{style:{top:"-3em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(n.span,{className:"mord mathnormal",children:"A"})]}),(0,r.jsxs)(n.span,{style:{top:"-3.2523em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"3em"}}),(0,r.jsx)(n.span,{className:"accent-body",style:{left:"-0.2361em"},children:(0,r.jsx)(n.span,{className:"mord",children:"\u02DA"})})]})]})})})}),(0,r.jsx)(n.span,{className:"msupsub",children:(0,r.jsx)(n.span,{className:"vlist-t",children:(0,r.jsx)(n.span,{className:"vlist-r",children:(0,r.jsx)(n.span,{className:"vlist",style:{height:"0.8141em"},children:(0,r.jsxs)(n.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,r.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,r.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,r.jsxs)(n.span,{className:"mord mtight",children:[(0,r.jsx)(n.span,{className:"mord mtight",children:"\u2212"}),(0,r.jsx)(n.span,{className:"mord mtight",children:"1"})]})})]})})})})})]})]})})]})," along\nthe slit, and perpendicular to the slit directions, respectively."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"laplacian",children:"laplacian"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"diff2 = arp.laplacian(data, x, y, bw=5, w=1)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Laplacian (second order partial derivatives with respect to both energy and\nangle) of the spectra."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 2D spectra."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"})," : 1D array of energy."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y"})," : 1D array of theta values."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bw"})," : width for box-car smoothing, integer number of points (default value =\n5)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"w"})," : scaling weight (optional). Default weight is 1."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"diff2"})," : 2D array of spectra after taking second order partial derivative\nw.r.t. both energy and angle. This array has the same shape as input array."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"line_profile",children:"line_profile"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"edc = arp.line_profile(data, y, y_min, y_max)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Returns the 1D vector of integrated line profile. The integration is done along\nthe second dimension of ",(0,r.jsx)(n.code,{children:"data"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 2D array."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y"})," : 1D vector of axis scaling along the second dimension of ",(0,r.jsx)(n.code,{children:"data"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y_min"}),", ",(0,r.jsx)(n.code,{children:"y_max"})," : integration bounds."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"edc"})," : 1D vector of integrated values defined by the width [y_min, y_max]\nalong the first dimension."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"load_ses_map",children:"load_ses_map"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data, energy, theta, phi = arp.load_map_data(name)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Loads Fermi map data from output ",(0,r.jsx)(n.code,{children:".zip"})," file of Scienta-Omicron SES program."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string) : name or file path of ",(0,r.jsx)(n.code,{children:".zip"})," map data file. It could be a\nlocal path or URL path."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"}),": 3D array of intensity values. Dimension 1 \u2192 energy, Dimension 2 \u2192\nangle theta (along the slit direction), and Dimension 3 \u2192 angle phi (azimuth/\nperpendicular to the slit direction)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"energy"}),": 1D vector of kinetic energy points in eV."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"theta"}),": 1D vector of theta values in degree."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"phi"})," : 1D vector of phi values in degree."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"load_ses_spectra",children:"load_ses_spectra"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data, angle, energy = arp.load_ses_spectra(name)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Loads data from a text file produced by Scienta-Omicron SES program."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string) : name or file path of SES ",(0,r.jsx)(n.code,{children:".txt"})," file. It could be a local\npath or a URL address."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 2D array (numpy ndarry) of intensity values."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"angle"})," : 1D vector (numpy ndarry) of angle values in degree."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"energy"})," : 1D vector (numpy ndarry) of kinetic energy values in eV."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"plane_slice",children:"plane_slice"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"surf = arp.plane_slice(data, x, x_min, x_max)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Returns the 2D slice along the first dimension of ",(0,r.jsx)(n.code,{children:"data"})," and integrated in the\nwidth [x_min, x_max]."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 3D matrix."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"})," : axes scaling along the first dimension."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x_min"}),", ",(0,r.jsx)(n.code,{children:"x_max"})," : integration bounds."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"surf"})," : 2D array."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"rotate_2d",children:"rotate_2d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data_r, theta_r, phi_r = arp.rotate_2d(data, angle, theta, phi)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Rotates 2D array with rotation axis perpendicular to the plane. Center of\nrotation is at theta=0, phi=0."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 2D array. The data will be rotated perpendicular to the plane."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"angle"})," : amount of rotation in degree. Positive value rotates clockwise."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"theta"})," : 1D array of axis scaling along the second dimension of ",(0,r.jsx)(n.code,{children:"data"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"phi"})," : 1D array of axis scaling along the third dimension of ",(0,r.jsx)(n.code,{children:"data"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data_r"})," : rotated 2D matrix. Data points outside of interpolation range is\nset to ",(0,r.jsx)(n.code,{children:"NaN"})," (not a number)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"theta_r"})," : 1D array of axis scaling along the second dimension of ",(0,r.jsx)(n.code,{children:"data_r"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"phi_r"})," : 1D array of axis scaling along the third dimension of ",(0,r.jsx)(n.code,{children:"data_r"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"rotate_3d",children:"rotate_3d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"data_r, theta_r, phi_r = arp.rotate_3d(data, angle, theta, phi)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Rotates the volume data (3D matrix) with respect to the first dimension. Center\nof rotation is at theta=0, phi=0."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," : 3D array. First, second, and third dimensions are along energy,\ntheta, and phi, respectively. The data will be rotated perpendicular to energy,\ni.e., in the theta-phi plane."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"angle"})," : amount of rotation in degree. Positive value rotates clockwise."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"theta"})," : 1D array of axis scaling along the second dimension of ",(0,r.jsx)(n.code,{children:"data"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"phi"})," : 1D array of axis scaling along the third dimension of ",(0,r.jsx)(n.code,{children:"data"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data_r"})," : rotated 3D matrix. Data points outside of interpolation range is\nset to ",(0,r.jsx)(n.code,{children:"NaN"})," (not a number)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"theta_r"})," : 1D array of axis scaling along the second dimension of ",(0,r.jsx)(n.code,{children:"data_r"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"phi_r"})," : 1D array of axis scaling along the third dimension of ",(0,r.jsx)(n.code,{children:"data_r"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"save_xps",children:"save_xps"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'arp.save_xps(energy, intensity, "xps_data.x_y")\n'})}),"\n",(0,r.jsx)(n.p,{children:"Save XPS energy and intensity in two column plaintext file."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"energy"})," : one dimensional vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"intensity"})," : one dimensional vector"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filename"})," : Optional output filename."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Two column data is saved in file."})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},65:function(e,n,s){s.d(n,{Z:()=>d,a:()=>l});var i=s(7294);let r={},a=i.createContext(r);function l(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);